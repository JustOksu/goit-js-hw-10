{"version":3,"file":"commonHelpers2.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\ndocument.getElementById('start-btn').addEventListener('click', startTimer);\n\nlet userSelectedDate;\n\nconst datePicker = flatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates.pop();\n    const currentDate = new Date();\n    if (userSelectedDate < currentDate) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      document.getElementById('start-btn').disabled = true;\n    } else {\n      document.getElementById('start-btn').disabled = false;\n    }\n  },\n});\n\nfunction startTimer() {\n  if (!userSelectedDate) return;\n\n  document.getElementById('start-btn').disabled = true;\n  document.getElementById('datetime-picker').disabled = true;\n\n  const timerInterval = setInterval(() => {\n    const remainingTime = userSelectedDate - new Date();\n    if (remainingTime <= 0) {\n      clearInterval(timerInterval);\n      updateTimer(0);\n      document.getElementById('datetime-picker').disabled = false;\n      return;\n    }\n    updateTimer(remainingTime);\n  }, 1000);\n}\n\nfunction updateTimer(remainingTime) {\n  const time = convertMs(remainingTime);\n  document.querySelector('[data-days]').textContent = addLeadingZero(time.days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(\n    time.hours\n  );\n  document.querySelector('[data-minutes]').textContent = addLeadingZero(\n    time.minutes\n  );\n  document.querySelector('[data-seconds]').textContent = addLeadingZero(\n    time.seconds\n  );\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["startTimer","userSelectedDate","flatpickr","selectedDates","iziToast","timerInterval","remainingTime","updateTimer","time","convertMs","addLeadingZero","ms","days","hours","minutes","seconds","value"],"mappings":"sGAKA,SAAS,eAAe,WAAW,EAAE,iBAAiB,QAASA,CAAU,EAEzE,IAAIC,EAEeC,EAAU,mBAAoB,CAC/C,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,MAE7BF,EADgB,IAAI,MAEtBG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACD,SAAS,eAAe,WAAW,EAAE,SAAW,IAEhD,SAAS,eAAe,WAAW,EAAE,SAAW,EAEnD,CACH,CAAC,EAED,SAASJ,GAAa,CACpB,GAAI,CAACC,EAAkB,OAEvB,SAAS,eAAe,WAAW,EAAE,SAAW,GAChD,SAAS,eAAe,iBAAiB,EAAE,SAAW,GAEtD,MAAMI,EAAgB,YAAY,IAAM,CACtC,MAAMC,EAAgBL,EAAmB,IAAI,KAC7C,GAAIK,GAAiB,EAAG,CACtB,cAAcD,CAAa,EAC3BE,EAAY,CAAC,EACb,SAAS,eAAe,iBAAiB,EAAE,SAAW,GACtD,MACD,CACDA,EAAYD,CAAa,CAC1B,EAAE,GAAI,CACT,CAEA,SAASC,EAAYD,EAAe,CAClC,MAAME,EAAOC,EAAUH,CAAa,EACpC,SAAS,cAAc,aAAa,EAAE,YAAcI,EAAeF,EAAK,IAAI,EAC5E,SAAS,cAAc,cAAc,EAAE,YAAcE,EACnDF,EAAK,KACT,EACE,SAAS,cAAc,gBAAgB,EAAE,YAAcE,EACrDF,EAAK,OACT,EACE,SAAS,cAAc,gBAAgB,EAAE,YAAcE,EACrDF,EAAK,OACT,CACA,CAEA,SAASC,EAAUE,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAeM,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}